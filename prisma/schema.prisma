generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String
  lastName  String
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  orders    Order[]
  addresses Address[]
  reviews   Review[]
  
  @@map("users")
}

model Product {
  id            String   @id @default(cuid())
  name          String
  description   String
  price         Int
  originalPrice Int?
  images        String[]
  category      String
  material      String
  inStock       Boolean  @default(true)
  stockQuantity Int      @default(0)
  rating        Float    @default(0)
  reviewCount   Int      @default(0)
  featured      Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  orderItems OrderItem[]
  reviews    Review[]
  
  @@map("products")
}

model Order {
  id            String   @id @default(cuid())
  orderNumber   String   @unique
  userId        String
  status        String   @default("PENDING")
  total         Int
  paymentStatus String   @default("PENDING")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  user  User        @relation(fields: [userId], references: [id])
  items OrderItem[]
  
  @@map("orders")
}

model OrderItem {
  id        String @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Int
  
  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
  
  @@map("order_items")
}

model Address {
  id        String @id @default(cuid())
  userId    String
  address1  String
  city      String
  state     String
  country   String @default("India")
  isDefault Boolean @default(false)
  
  user User @relation(fields: [userId], references: [id])
  
  @@map("addresses")
}

model Review {
  id        String   @id @default(cuid())
  productId String
  userId    String
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  
  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id])
  
  @@map("reviews")
}